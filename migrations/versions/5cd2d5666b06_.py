"""empty message

Revision ID: 5cd2d5666b06
Revises: ffdc0a98111c
Create Date: 2023-02-21 16:51:50.672714

"""
from alembic import op
import sqlalchemy as sa
import os


environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = '5cd2d5666b06'
down_revision = 'ffdc0a98111c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tournaments_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tournament_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE tournaments_table SET SCHEMA {SCHEMA};")


    op.create_table('leagues_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('display_pic', sa.String(), nullable=False),
    sa.Column('team_budget', sa.Integer(), nullable=False),
    sa.Column('is_private', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE leagues_table SET SCHEMA {SCHEMA};")


    op.create_table('players_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('aka', sa.String(length=50), nullable=False),
    sa.Column('picture', sa.String(), nullable=False),
    sa.Column('team', sa.String(length=50), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('position', sa.String(length=20), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments_table.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE players_table SET SCHEMA {SCHEMA};")


    op.create_table('game_week_stats_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('week', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('goals', sa.Integer(), nullable=False),
    sa.Column('assists', sa.Integer(), nullable=False),
    sa.Column('clean_sheet', sa.Boolean(), nullable=False),
    sa.Column('man_of_the_match', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['players_table.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE game_week_stats_table SET SCHEMA {SCHEMA};")


    op.create_table('leagues_tournaments_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('league_id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['league_id'], ['leagues_table.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments_table.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE leagues_tournaments_table SET SCHEMA {SCHEMA};")


    op.create_table('user_teams_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('league_id', sa.Integer(), nullable=False),
    sa.Column('bank', sa.Integer(), nullable=False),
    sa.Column('match_day', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['league_id'], ['leagues_table.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE user_teams_table SET SCHEMA {SCHEMA};")


    op.create_table('user_teams_players_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_team_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['players_table.id'], ),
    sa.ForeignKeyConstraint(['user_team_id'], ['user_teams_table.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE user_teams_players_table SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_teams_players_table')
    op.drop_table('user_teams_table')
    op.drop_table('leagues_tournaments_table')
    op.drop_table('game_week_stats_table')
    op.drop_table('players_table')
    op.drop_table('leagues_table')
    op.drop_table('tournaments_table')
    # ### end Alembic commands ###
